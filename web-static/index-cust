<!DOCTYPE html>
<html lang="en">
  <head>
         <meta http-equiv="Content-Type" content="text/html;charset=UTF-8">
        <title>Pot.Hashfire.us</title>
        <link rel="shortcut icon" type="image/x-icon" href="graphs/favicon.ico" />
        <script type="text/javascript" src="graphs/d3.v2.min.js"></script>
            <link href="graphs/css/bootstrap.css" rel="stylesheet">
                <link href="graphs/css/jquery.jqplot.min.css" rel="stylesheet">
                <script src="//ajax.googleapis.com/ajax/libs/jquery/1.10.2/jquery.min.js"></script>
                <script src="graphs/js/bootstrap.min.js"></script>
                <script language="javascript" type="text/javascript" src="graphs/js/jquery.jqplot.min.js"></script>
                <script class="include" language="javascript" type="text/javascript" src="graphs/js/jqplot.pieRenderer.min.js"></script>
            <style>
                        body {
                                padding-top: 60px;
                        }
                        line {
                stroke: black;
                stroke-width: 1;
                shape-rendering: crispEdges;
            }

            .plotline {
                stroke-width: 1.4;
                fill: none;
            }

            text {
                font-family: Sans-serif;
                font-size: 12px;
            }
            </style>
            <link href="graphs/css/bootstrap-responsive.css" rel="stylesheet">
                
              <!--  <script>
                        function ChangeCurrentPeriod(p_Period, p_Sender)
                        {
                                period=p_Period;
                                $('#scale_menu li').removeClass('active');
                                $('#' + p_Sender).addClass('active');
                                document.location.href =  "?" + period;
                        }
        </script> --> 

  <!-- This script was written by Alexander Zschach <alex . zschach.net>
         https://github.com/johndoe75/p2pool-node-status
         Bugfixes, additional miner info display and other improvements
         by Claus Herwig <c.herwig . checon.de> for VTC p2pool
         https://github.com/donSchoe/p2pool-vtc -->
   <!--
    <meta charset="utf-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <meta name="description" content="">
    <meta name="author" content="">
    <meta name="robots" content="noimageindex">
    <link rel="shortcut icon" type="image/x-icon" href="favicon.ico" />
        
    <title>p2pool</title>

    <link href="http://fonts.googleapis.com/css?family=Roboto:300,300italic,400,400italic,100,100italic,500,500italic,700,700italic,900,900italic" rel="stylesheet" type="text/css">
    <link href='http://fonts.googleapis.com/css?family=Roboto+Condensed:400italic,700italic,400,700' rel='stylesheet' type='text/css'>
-->
    <!-- Bootstrap core CSS -->
<!--   
 <link rel="stylesheet" href="css/bootstrap.min.css">
    <link rel="stylesheet" href="css/bootstrap-theme.min.css">
    <link href="//netdna.bootstrapcdn.com/font-awesome/4.0.3/css/font-awesome.css" rel="stylesheet">
-->
    <script src="js/jquery-2.0.3.min.js"></script>
    <script src="js/bootstrap.min.js"></script>
    <script src="js/jquery-dateFormat.min.js"></script>

    <script src="js/highcharts.js"></script>
    <script src="js/exporting.js"></script>

    <script src="js/util.js"></script>
    <script src="js/graph.js"></script>

    <!-- Custom styles for this template -->
    <link href="css/grid.css" rel="stylesheet">

    <style type="text/css">
      body {
        font-family: 'Roboto', Helvetica, sans-serif;
        font-size: 14px;
      }
    </style>

  </head>

  <body>
 <div class="navbar navbar-inverse navbar-fixed-top">
                  <div class="navbar-inner">
                        <div class="container">
                          <button type="button" class="btn btn-navbar" data-toggle="collapse" data-target=".nav-collapse">
                                <span class="icon-bar"></span>
                                <span class="icon-bar"></span>
                                <span class="icon-bar"></span>
                          </button>
                          <a class="brand" href="http://pot.hashfire.us:9420/static/">(<span class="currency"></span>) P2Pool ‚Äê Hashfire.us Node Dashboard</a>
                          <div class="nav-collapse collapse">
                                <ul class="nav">
                                  <li><a href="stats/index.html">Stats</a></li>
                                  <li><a href="graphs/index.html">Graphs</a></li>
                                  <li><a href="http://hashfire.us">Pools</a></li>
                                <!--  <li><a href="https://github.com/hardcpp/P2PoolExtendedFrontEnd">Contact</a></li> -->
                                </ul>
                          </div><!--/.nav-collapse -->
                        </div>
                  </div>
                </div>  

<!--<div id='ribbon'>
      <a href="https://github.com/johndoe75/p2pool-node-status">
        <img style="position: absolute; top: 0; right: 0; border: 0;" src="img/forkme_right_orange_ff7600.png" alt="Fork me on GitHub">
      </a>
    </div>-->

    <div class="container">
<!--      <div class="page-header"> -->
<!--        <h1>(<span class='currency'></span>) P2Pool &dash; Hashfire.us Node Dashboard</h1> -->
        <a href=http://potcoin.info/>[Official Homepage]</a> -
        <a href=http://k-dev.net/cgminer>[AMD GPU Miner]</a> -
	<a href=https://bitcointalk.org/index.php?topic=167229.0>[Nvidia GPU Miner]</a> -
        <a href=http://www.hashfire.us>[P2Pool Nodes]</a> -
        <a href=https://github.com/potcoin/potcoin>[Potcoin Source]</a> -
        <a href=https://github.com/Rav3nPL/p2pool-rav>[P2Pool Source]</a> -
        <a href=http://chainz.cryptoid.info/pot/>[Block Explorer]</a>        
<p>
          <small>
            Node: <span class='node'></span>&nbsp;&dash;
            Updated: <span id='updated'></span>
          </small>
        </p>
<!--      </div> -->
      <div id='node_alerts' class="alert alert-danger hidden"></div>

<div class="alert alert-danger hidden">
<p>Hard Fork Ahead, v9.1.0! Dark Gravity Wave v2 goes into effect on block 45000 (in more than a week). <a href=https://bitcointalk.org/index.php?topic=421615.msg5893988#msg5893988>https://bitcointalk.org/index.php?topic=421615.msg5893988#msg5893988</a></p>
</div>

<div class="alert alert-info">
     <p>cgminer.exe --scrypt --no-submit-stale -o stratum+tcp://pot.hashfire.us:9420 -u YOURWALLETADDRESS+0.00000116 * Hash Rate in KH/s  -p x</p>
     <p>cudaminer.exe -a scrypt -o stratum+tcp://pot.hashfire.us:9420 -u YOURWALLETADDRESS+0.00000116 * Hash Rate in KH/s  -p x</p>
     <p>
     </p>
     <p>Why add the + you ask? To get work that can be solved by your miner in the 10second p2pool sharechain window. Here is an example with 720 KH/s</p>
     <p>cgminer.exe --scrypt --no-submit-stale -o stratum+tcp://pot.hashfire.us:9420 -u PLDouHNb7bjp8hiof41rVijxrPi4mDqZ3e+0.0008352 -p x</p>
 	 <!-- <p>message</p> -->
      </div>

      <center>
        <div class='container'>
          <button id='hour' type="button" class="hashrate btn btn-info">Hour</button>
          <button id='day' type="button" class="hashrate btn btn-info">Day</button>
          <button id='week' type="button" class="hashrate btn btn-info">Week</button>
          <button id='month' type="button" class="hashrate btn btn-info">Month</button>
          <button id='year' type="button" class="hashrate btn btn-info">Year</button>
        </div>
      </center>
      <div id='graph'></div>

      <h4>Status</h4>
      <table id='status' class="table table-hover" border='0'>
        <tr>
          <td width='25%'>Node rate:</td>
          <td width='25%' class='text-right'><span id='local_rate'></span></td>
          <td width='25%'>Node shares:</td>
          <td width='25%' class='text-right'><span id='shares'></span></td>
        </tr>
        <tr>
          <td width='25%'>Global p2pool rate:</td>
          <td width='25%' class='text-right'><span id='global_rate'></span></td>
          <td width='25%'>Share difficulty (p2pool minimum):</td>
          <td width='25%' class='text-right'><span id='share_difficulty'></span></td>
        </tr>
        <tr>
          <td width='25%'><span class='currency'></span> network hashrate (estimate):</td>
          <td width='25%' class='text-right'><span id='network_rate'></span></td>
          <td width='25%'>Network block difficulty:</td>
          <td width='25%' class='text-right'><span id='block_difficulty'></span></td>
        </tr>
        <tr>
          <td width='25%'>Current block value:</td>
          <td width='25%' class='text-right'><span id='block_value'></span></td>
          <td width='25%'>Expected time to share (this node):</td>
          <td width='25%' class='text-right'><span id='expected_time_to_share'></span></td>
        </tr>
        <tr>
        <!--  <td width='25%'>Payout if a block were found NOW:</td>
          <td width='25%' class='text-right'><span id='payout_now'></span></td>-->
          <td width='25%'>Node peers:</td>
          <td width='25%' class='text-right'>
            <i class='fa fa-sign-in fa-fw'></i>
            <span id='peers_in'></span>
            /
            <i class='fa fa-sign-out fa-fw'></i>
            <span id='peers_out'></span>
          </td>
          <td width='25%'>Expected time to block (p2pool):</td>
          <td width='25%' class='text-right'><span id='expected_time_to_block'></span></td>
        </tr>
        <tr>
          <td width='25%'>Node fee:</td>
          <td width='25%' class='text-right'><span id='node_fee'></span></td>
          <td width='25%'>Node uptime:</td>
          <td width='25%' class='text-right'><span id='node_uptime'></span></td>
        </tr>
        <tr>
          <td width='25%'>Node p2pool version:</td>
          <td width='25%' class='text-right'><span id='p2pool_version'></span></td>
          <td width='25%'>Protocol version:</td>
          <td width='25%' class='text-right'><span id='protocol_version'></span></td>
        </tr>
        <!--<tr>
          <td width='25%'>Node donation:</td>
          <td width='25%' class='text-right'><span id='node_donation'></span></td>
        </tr>-->
      </table>

      <h4>Active miners on this node</h4>
      <table class="table table-hover">
        <thead><tr>
          <th class='text-left'><span class='currency'></span> Address</th>
          <th class='text-right'>Hashrate</th>
          <th class='text-right'>DOA Hashrate (DOA %)</th>
          <th class='text-right'>Share difficulty</th>
          <th class='text-right'>Time to share</th>
          <th class='text-right'>Predicted payout</th>
        </tr></thead>
        <tbody id='active_miners'>
        </tbody>
      </table>
<!--
      <h5 align="center"><a href="newgraphs">Click here for more detailed stats
      and graphs</a></h5>

      <h4>Recent blocks</h4>
      <table class="table table-hover">
        <thead><tr>
          <th>When</th>
          <th>Date/Time</th>
          <th>Number</th>
          <th>Hash</th>    -->
          <!--<th>Confirmations</th>-->
 <!--       </tr></thead>
        <tbody id='recent_blocks'>
        </tbody>
      </table>  -->

    </div> <!-- /container -->
    <script type="text/javascript">

    $(document).ready(function() {
      $(document).trigger('init');
    });

    // reload timers 
    var intervalFigures = 30;
    var intervalGraph = 600;
    
    // array defining my addresses for highlighting them
    var myself= [];

    var currency, currency_info, rate, local_stats,
        global_stats, current_payouts, recent_blocks;
    var local_hashrate= 0, local_doa_hashrate= 0;

    // ==================================================================
    // event handlers

    $('#hour.hashrate').click(function(e) {
      fetchGraph('hour');
    });
    $('#day.hashrate').click(function(e) {
      fetchGraph('day');
    });
    $('#week.hashrate').click(function(e) {
      fetchGraph('week');
    });
    $('#month.hashrate').click(function(e) {
      fetchGraph('month');
    });
    $('#year.hashrate').click(function(e) {
      fetchGraph('year');
    });

    // ==================================================================
    // custom event handlers

    // init

    $(document).on('init', function(e, eventInfo) {
      fetchdata(); fetchBlocks(); fetchGraph('day');
    });

    $(document).on('update', function(e, eventInfo) {
      fetchdata();
      d=new Date()
      if (((d.getMinutes() * 60 + d.getSeconds()) % intervalGraph) < intervalFigures) {
        fetchBlocks();
        graphPeriod=char.title.text.match(/\((.+)\)/)[1] || 'day';
        fetchGraph(graphPeriod);
      };
    });

    // Fills the list of active miners on this node.  I know, there are
    // zillions of people out there on p2pool.  But I'm typically only
    // interested to see, who is mining on my node.

    $(document).on('update_miners', function(e, eventInfo) {
      local_hashrate= 0; local_doa_hashrate= 0;
      
      $('#active_miners').empty();
      
      $.each(local_stats.miner_hash_rates, function(address, hashrate) {
        address= address.replace(/[\W\s]+/g,"invalid_address_");
        tr= $('<tr/>').attr('id', address);

        // highlight our miner if configured
        if(myself && myself.length > 0 && $.inArray(address, myself) >= 0) {
          tr.addClass('warning');
        }

        link_icon= $('<i/>').attr('class', 'fa fa-external-link fa-fw');
        blockinfo= $('<a/>')
          .attr('href', currency_info.address_explorer_url_prefix + address)
          .attr('target', '_blank').append(link_icon);

        doa= local_stats.miner_dead_hash_rates[address] || 0;
        doa_prop= (parseFloat(doa) / parseFloat(hashrate)) * 100;
        
        local_hashrate+= hashrate;
        local_doa_hashrate+= doa;

        tr.append($('<td/>').attr('class', 'text-left')
          .html(address + '&nbsp;').append(blockinfo));
        tr.append($('<td/>').attr('class', 'text-right')
          .append(formatHashrate(hashrate)));
        tr.append($('<td/>').attr('class', 'text-right')
          .append(formatHashrate(doa) + ' (' + doa_prop.toFixed(2) + '%)'));

        diff= parseFloat(local_stats.miner_last_difficulties[address]) || 0;
        time_to_share= (parseInt(local_stats.attempts_to_share) / parseInt(hashrate)
         * (diff / parseFloat(global_stats.min_difficulty))) || 0;

        tr.append($('<td/>').attr('class', 'text-right')
          .append(diff.toFixed(3) +
        ' (' + formatInt(diff*65536) + ')'));

        tr.append($('<td/>').attr('class', 'text-right')
          .append((''+time_to_share).formatSeconds()));

        payout= current_payouts[address];

        if(payout) {
          td= $('<td/>').attr('class', 'text-right')
            .text(parseFloat(payout).toFixed(8))
            .append(' ').append(currency.clone());
          tr.append(td);
        }
        else {
          tr.append($('<td/>').attr('class', 'text-right')
            .append($('<i/>').append('no shares yet')));
        }
        //$('#'+address).remove();
        $('#active_miners').append(tr);
      });

      rate= formatHashrate(local_hashrate)
        + ' (DOA '
        + formatHashrate(local_doa_hashrate)
        + ' / ' + ((local_doa_hashrate / local_hashrate) * 100).toFixed(2)
        + '%)';
      //dr="[debug: "+local_hashrate+" "+local_doa_hashrate+"]";        
      $('#local_rate').text(rate);

      global_doa_rate= global_stats.pool_hash_rate - global_stats.pool_nonstale_hash_rate;
      global_rate= formatHashrate(global_stats.pool_hash_rate)
        + ' (DOA '
        + formatHashrate(global_doa_rate)
        + ' / ' + ((global_doa_rate / global_stats.pool_hash_rate) * 100).toFixed(2)
        + '%)';
      $('#global_rate').text(global_rate);

      $('#network_rate').text(formatHashrate(global_stats.network_hashrate));

      block_diff=global_stats.network_block_difficulty
      $('#block_difficulty').text(block_diff.toFixed(3) +
        ' (' + formatInt(block_diff*65536) + ')');
      

      share_diff=parseFloat(global_stats.min_difficulty);
      $('#share_difficulty').text(share_diff.toFixed(3) +
        ' (' + formatInt(share_diff*65536) + ')');

      $('#block_value')
        .text(parseFloat(local_stats.block_value).toFixed(8))
        .append(' ').append(currency.clone());

      //$('#node_donation')
      //  .text(local_stats.donation_proportion + '%');
      
      $('#node_fee')
        .text(local_stats.fee + '%');
      $('#p2pool_version')
        .text(local_stats.version);
      $('#protocol_version')
        .text(local_stats.protocol_version);

      $('#peers_in').text(local_stats.peers.incoming);
      $('#peers_out').text(local_stats.peers.outgoing);

      $('#node_uptime').text(('' + local_stats.uptime).formatSeconds());

      $(document).attr('title', formatHashrate(local_hashrate)+ ' p2pool - '+currency_info.symbol+' - '+location.host);

      if(local_stats.warnings.length > 0) {
        $('#node_alerts').empty();

        $.each(local_stats.warnings, function(key, warning) {
          $('#node_alerts').append($('<p/>').append(warning));
        });

        $('#node_alerts').fadeIn(1000, function() {
          $(this).removeClass('hidden');
        });
      }
      else {
        if(!$('#node_alerts').hasClass('hidden'))
          $('#node_alerts').fadeOut(1000, function() {
            $(this).addClass('hidden');
          });
      }

      $('#shares')
        .text('Total: ' + local_stats.shares.total
        + ' (Orphan: ' + local_stats.shares.orphan
        + ', Dead: ' + local_stats.shares.dead + ')');

      time_to_share= parseInt(local_stats.attempts_to_share) / parseInt(local_hashrate);
      $('#expected_time_to_share').text((''+time_to_share).formatSeconds());
      time_to_block= parseInt(local_stats.attempts_to_block) / parseInt(global_stats.pool_hash_rate);
      $('#expected_time_to_block').text((''+time_to_block).formatSeconds());

      //$('#payout_now').html('&dash;');
    });

    // Fills the recent block table

    $(document).on('update_blocks', function(e, eventInfo) {
      $('#recent_blocks').empty();
      $.each(recent_blocks, function(key, block) {
        if(block.number < 393216 ) {
            ts= block.ts; num= block.number ; hash= block.hash;
        } else {
            ts= block.ts; num= block.number - 393216; hash= block.hash;
       }
        // link to blockchain.info for the given hash
        blockinfo= $('<a/>')
          .attr('href', currency_info.block_explorer_url_prefix + hash)
          .attr('target', '_blank').text(hash);

        tr= $('<tr/>').attr('id', num);
        tr.append($('<td/>').append($.format.prettyDate(new Date(ts * 1000))));
        tr.append($('<td/>').append($.format.date(new Date(ts * 1000))));
        tr.append($('<td/>').append(num));
        tr.append($('<td/>').append(blockinfo));
        //tr.append($('<td/>').html('&dash;'));
        $('#recent_blocks').append(tr);
      });
    });

    // Places the currency this node is mining in the page header.  If it's
    // Bitcoin, use the fontawesome BTC icon.
    
    //doing some other init here

    var set_currency_symbol= true;
    $(document).on('update_currency', function(e, eventInfo) {
      if(currency_info.symbol === 'BTC') {
        // use fontawesome BTC symbol
        currency= $('<i/>').attr('class', 'fa fa-btc fa-fw');
      }
      else { currency= $('<span/>').append(currency_info.symbol); }

      if(set_currency_symbol) {
        $('.currency')
          .append(currency);
        //$(document).attr('title','p2pool - '+currency_info.symbol+' - '+location.host);
        
        $('.node')
          .append(location.host);
          
        set_currency_symbol= false;
      }
    });

    // Updates the 'Updated:' field in page header

    $(document).on('update_time', function(e, eventInfo) {
      dts= $.format.date(new Date(), 'yyyy-MM-dd HH:mm:ss');
      $('#updated').text(dts);
    });

    // ==================================================================

    var fetchdata= function() {
      $.getJSON('/rate', function(data) {
        if(data) rate= data;

        $.getJSON('/web/currency_info', function(data) {
          currency_info= data;
          $(document).trigger('update_currency');

          $.getJSON('/local_stats', function(data) {
            if(data) local_stats= data;

            $.getJSON('/current_payouts', function(data) {
              if(data) current_payouts= data;

              $.getJSON('/global_stats', function(data) {
                if(data) global_stats= data;
                $(document).trigger('update_miners');
                $(document).trigger('update_time');
              });
            });
          });
        });
      });
    };

    var fetchBlocks= function() {
      $.getJSON('/web/currency_info', function(data) {
        currency_info= data;
        $.getJSON('/recent_blocks', function(data) {
          if(data) recent_blocks= data;
          $(document).trigger('update_blocks');
        });
      });
    }

    var fetchGraph= function(interval) {
      //console.log(interval);
      var graph_hashrate= [], graph_doa_hashrate= [];

     if(!interval) interval= day; 

      $.getJSON('/web/graph_data/local_hash_rate/last_' + interval, function(data) {
        $.each(data, function(key, value) {
          el= []; el.push(parseInt(value[0]) * 1000,
            parseFloat(value[1]));
          graph_hashrate.push(el);
        });
        graph_hashrate.sort();
        $.getJSON('/web/graph_data/local_dead_hash_rate/last_' + interval, function(data) {
          $.each(data, function(key, value) {
            el= []; el.push(parseInt(value[0]) * 1000,
              parseFloat(value[1]));
            graph_doa_hashrate.push(el);
          });
          graph_doa_hashrate.sort();
          draw(graph_hashrate, graph_doa_hashrate, interval);
        })
      })
    }

    // Let the GitHub ribbon fade out and be removed after 5 seconds.

    //(setTimeout(function() {
    //  $('#ribbon').fadeOut(1000, function() {
    //    this.remove();
    //  });
    //}, intervalFigures * 1000);

    setInterval(function() {
      $(document).trigger('update');
    }, intervalFigures * 1000);

    </script>
  </body>
</html>
